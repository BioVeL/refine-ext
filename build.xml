<?xml version="1.0" encoding="UTF-8"?>

<!--+
    |
    |  Google Refine BioVeL Extension Build File    
    |                
    +-->
    
<project name="refine-biovel-extension" default="build" basedir=".">

    <property environment="env"/>

    <property name="javac.source" value="1.6"/>
    <property name="javac.target" value="1.6"/>

	<property file="./module/MOD-INF/module.properties" />
	
    <condition property="version" value="trunk">
        <not><isset property="version"/></not>
    </condition>

    <condition property="revision" value="rXXXX">
        <not><isset property="revision"/></not>
    </condition>

    <condition property="full_version" value="0.0.0.0">
        <not><isset property="full_version"/></not>
    </condition>

    <condition property="dist.dir" value="dist">
        <not><isset property="dist.dir"/></not>
    </condition>

    <property name="fullname" value="${name}-${version}-${revision}" />
	<echo message="${basedir}" />
    <property name="refine.dir" value="${basedir}/../../main" />
    <property name="refine.server.dir" value="${basedir}/../../server" />
    <property name="refine.webinf.dir" value="${refine.dir}/webapp/WEB-INF" />
    <property name="refine.modinf.dir" value="${refine.dir}/webapp/modules/core/MOD-INF" />    
    <property name="refine.classes.dir" value="${refine.webinf.dir}/classes" />
    <property name="refine.lib.dir" value="${refine.webinf.dir}/lib" />
    
    <property name="src.dir" value="${basedir}/src" />
    <property name="module.dir" value="${basedir}/module" />
    <property name="modinf.dir" value="${module.dir}/MOD-INF" />
    <property name="lib.dir" value="${modinf.dir}/lib" />
    <property name="refine.server.lib.dir" value="${refine.server.dir}/lib" />
    <property name="classes.dir" value="${modinf.dir}/classes" />
	
    <property name="dld.beta.dir" value="/mnt/bgbm_biovel/public/beta/refine" />
	<property name="dld.stable.dir" value="/mnt/bgbm_biovel/public/refine" />

	
    <path id="class.path">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${refine.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
	<fileset dir="${refine.server.lib.dir}">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="${refine.classes.dir}"/>
    </path>
            
    <target name="build_java">
        <mkdir dir="${classes.dir}" />
        <javac encoding="utf-8" destdir="${classes.dir}" debug="true" includeAntRuntime="no" target="${javac.target}" source="${javac.source}">
            <src path="${src.dir}"/>
            <classpath refid="class.path" />
        </javac>
    </target>

    <target name="build" depends="build_java"/>
	
    <target name="package" depends="clean,build">
    	<zip destfile="${basedir}/../../dist/biovel.zip"
    	       basedir="../"    
    		   includes="biovel/**"
    	       excludes="**/src/**"
    	  />
    	
    	<exec dir="${basedir}/../.." executable="${basedir}/../../refine">
    	   <arg value="dist"/>
    	   <arg value="2.6.0"/>    	    
    	</exec>
    	
    </target>
	
    <target name="deploy_beta" depends="package">
    	<mkdir dir="${dld.beta.dir}/${version}" />
    	<copy 
    		file="${basedir}/../../dist/biovel.zip" 
    		todir="${dld.beta.dir}/${version}" 
    		overwrite="true"
    	/>
    	<copy 
    		file="${basedir}/../../dist/biovel.zip" 
    		todir="${dld.beta.dir}" 
    		overwrite="true"
    	/>
    	
    	<copy todir="${dld.beta.dir}/${version}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.tar.gz"/>
              <include name="google-refine-*.zip"/>
              <include name="google-refine-*.dmg"/>
            </fileset>   		
    	</copy>
    	
    	<copy todir="${dld.beta.dir}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.tar.gz"/>
              <include name="google-refine-*.zip"/>
              <include name="google-refine-*.dmg"/>
            </fileset>   		
    	</copy>
    	
    	<copy 
    		file="./module/MOD-INF/module.properties" 
    		todir="${dld.beta.dir}/${version}" 
    		overwrite="true"
    	/>
    	
    	<copy 
    		file="./module/MOD-INF/module.properties" 
    		todir="${dld.beta.dir}" 
    		overwrite="true"
    	/>

    </target>
	
    <target name="deploy_stable" depends="package">
    	<mkdir dir="${dld.stable.dir}/${version}" />
    	<copy 
    		file="${basedir}/../../dist/biovel.zip" 
    		todir="${dld.stable.dir}/${version}" 
    		overwrite="true"
    	/>
    	<copy 
    		file="${basedir}/../../dist/biovel.zip" 
    		todir="${dld.stable.dir}" 
    		overwrite="true"
    	/>
    	
    	<copy 
    		file="./module/MOD-INF/module.properties" 
    		todir="${dld.stable.dir}" 
    		overwrite="true"
    	/>
    	
    	<copy todir="${dld.stable.dir}/${version}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.tar.gz"/>
              <include name="google-refine-*.zip"/>
            </fileset>   		
    	</copy>
    	
    	<copy todir="${dld.stable.dir}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.tar.gz"/>
              <include name="google-refine-*.zip"/>
            </fileset>   		
    	</copy>
    	
    	<copy 
    		file="./module/MOD-INF/module.properties" 
    		todir="${dld.stable.dir}/${version}" 
    		overwrite="true"
    	/>
    	
    	<copy 
    		file="./module/MOD-INF/module.properties" 
    		todir="${dld.stable.dir}" 
    		overwrite="true"
    	/>
    </target>
	
    <target name="deploy_stable_mac" depends="package">
    	<mkdir dir="${dld.stable.dir}/${version}" />

    	
    	<copy todir="${dld.stable.dir}/${version}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.dmg"/>
            </fileset>   		
    	</copy>
    	
    	<copy todir="${dld.stable.dir}" overwrite="true">
            <fileset dir="${basedir}/../../dist">
              <include name="google-refine-*.dmg"/>
            </fileset>   		
    	</copy>
    </target>
	
    <target name="clean">
        <delete dir="${classes.dir}" />
    	<delete file="${basedir}/../../dist/biovel.zip" />
    </target>
</project>
